name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
          fetch-tags: true

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Find the v* tag for this commit (if any)
      - name: Find git tag
        id: find_tag
        run: |
          TAG=$(git tag --points-at ${{ github.event.workflow_run.head_sha }} | grep -E '^v[0-9]' | head -n1 || true)

          # Sanitize tag for Docker compatibility
          if [[ -n "$TAG" ]]; then
            # Convert to lowercase and replace invalid characters
            DOCKER_TAG=$(echo "$TAG" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]/-/g' | sed 's/^[-.]*//' | sed 's/[-._]*$//')

            # Skip if sanitization resulted in empty string
            if [[ -z "$DOCKER_TAG" ]]; then
              echo "Warning: Tag '$TAG' is invalid for Docker (sanitization resulted in empty string)"
              echo "Skipping Docker build for this tag"
              echo "tag=" >> $GITHUB_OUTPUT
            else
              echo "Original tag: $TAG"
              echo "Docker tag: $DOCKER_TAG"
              echo "tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
            fi
          else
            echo "tag=" >> $GITHUB_OUTPUT
          fi

      # Prepare dev image tags
      - name: Prepare dev image tags
        id: dev_tags
        run: |
          if [[ "${{ github.event.workflow_run.head_branch }}" == "main" ]]; then
            echo "Building dev image for main branch"
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dev"
          elif [[ "${{ steps.find_tag.outputs.tag }}" != "" ]]; then
            echo "Building dev image for PR tag: ${{ steps.find_tag.outputs.tag }}"
            TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.find_tag.outputs.tag }}"
          else
          echo "No dev image needed for this scenario"
            TAGS=""
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      # Build and push dev image (development target)
      - name: Build and push dev image
        if: ${{ steps.dev_tags.outputs.tags != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          target: development
          push: true
          tags: ${{ steps.dev_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build and push prod image (production target) for main branch tags only
      - name: Build and push prod image
        if: ${{ steps.find_tag.outputs.tag != '' && github.event.workflow_run.head_branch == 'main' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          target: production
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.find_tag.outputs.tag }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [build-and-push]
    if: always()
    steps:
      - name: Generate Deployment Report
        run: |
          echo "# 🚀 CD Pipeline Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY

          # Build status
          if [[ "${{ needs.build-and-push.result }}" == "success" ]]; then
            echo "| Build & Push | ✅ Success |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Build & Push | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 Image Information" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source Branch**: ${{ github.event.workflow_run.head_branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Source SHA**: \`${{ github.event.workflow_run.head_sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow Run**: #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY

          # Image type built
          if [[ "${{ github.event.workflow_run.head_branch }}" == "main" ]]; then
            echo "- **Image Type**: Production (if tagged) + Development" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Image Type**: Development (PR testing)" >> $GITHUB_STEP_SUMMARY
          fi
