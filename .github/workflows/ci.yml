name: Continuous Integration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  markdownlint:
    name: Markdown Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run markdownlint
        run: make lint-markdown

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run linting and formatting checks
        run: |
          make lint-all PYTHON=python

      - name: Run basic security scan
        run: |
          make security-scan PYTHON=python
        continue-on-error: true

      - name: Run unit tests with coverage
        run: |
          python -m pytest tests/ -v -m "not integration" --cov=mealie_translate --cov-report=xml --cov-report=term --cov-report=html --junit-xml=pytest-results.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results (Python ${{ matrix.python-version }})
          path: pytest-results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload test and coverage artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-python-${{ matrix.python-version }}
          path: |
            pytest-results.xml
            coverage.xml
            htmlcov/
          retention-days: 30

  docker-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [test, markdownlint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          target: testing
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [test, docker-test]
    if: github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'run-integration-tests')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Run integration tests
        run: |
          make test-integration PYTHON=python
        env:
          # Integration tests may need special environment variables
          # Add them here or use secrets for sensitive data
          CI: true

      - name: Publish Integration Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Integration Test Results
          path: pytest-results-integration.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload integration test artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: integration-test-results
          path: |
            pytest-results-integration.xml
            test-logs/
          retention-days: 14
